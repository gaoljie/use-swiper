{"version":3,"sources":["webpack:///../doc/pagination.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","useSwiper","ref","pagination","index","isMDXComponent"],"mappings":"oQASaA,G,oBAAe,S,oMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sNAAuNC,SAAO,GAC/PJ,QACAH,kBACAQ,eACAC,eAJ+P,gBAK/PT,IAL+P,EAM/PH,eAN+P,GAO9PO,QAAQ,eACZ,WAAM,IAECM,EACED,YAAU,CACZE,YAAY,IAFZD,IAIF,OAAO,mBAAKA,IAAKA,GACjB,4BACA,4BACA,4BACA,4BACA,gCAIJ,iBAAQ,CACN,GAAM,qBADR,qBAGA,YAAC,IAAD,CAAYL,WAAY,EAAGC,OAAQ,gOAAiOC,SAAO,GACzQJ,QACAH,kBACAQ,eACAC,eAJyQ,gBAKzQT,IALyQ,EAMzQH,eANyQ,GAOxQO,QAAQ,eACZ,WAAM,IAECM,EACED,YAAU,CACZE,WAAY,+BAFZD,IAIF,OAAO,mBAAKA,IAAKA,GACjB,4BACA,4BACA,4BACA,4BACA,gCAIJ,iBAAQ,CACN,GAAM,gCADR,gCAGA,YAAC,IAAD,CAAYL,WAAY,EAAGC,OAAQ,4PAA6PC,SAAO,GACrSJ,QACAH,kBACAQ,eACAC,eAJqS,gBAKrST,IALqS,EAMrSH,eANqS,GAOpSO,QAAQ,eACZ,WAAM,IAECM,EACED,YAAU,CACZE,WAAY,SAAAC,GAAK,OAAI,wBAAOA,EAAQ,MAFpCF,IAIF,OAAO,mBAAKA,IAAKA,GACjB,4BACA,4BACA,4BACA,4BACA,sC,kMAQRT,EAAWY,gBAAiB","file":"component---doc-pagination-mdx-1aae1cc6bc9f7df83544.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jay/Repos/gaoljie/use-swiper/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport useSwiper from \"../src\";\nimport \"../src/example.scss\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"pagination\"\n    }}>{`Pagination`}</h1>\n    <Playground __position={0} __code={'() => {\\n  const { ref } = useSwiper({ pagination: true })\\n  return (\\n    <div ref={ref}>\\n      <div>1</div>\\n      <div>2</div>\\n      <div>3</div>\\n      <div>4</div>\\n      <div>5</div>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useSwiper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          ref\n        } = useSwiper({\n          pagination: true\n        });\n        return <div ref={ref}>\n        <div>1</div>\n        <div>2</div>\n        <div>3</div>\n        <div>4</div>\n        <div>5</div>\n      </div>;\n      }}\n    </Playground>\n    <h1 {...{\n      \"id\": \"custom-pagination\"\n    }}>{`Custom Pagination`}</h1>\n    <Playground __position={1} __code={'() => {\\n  const { ref } = useSwiper({ pagination: <span>X</span> })\\n  return (\\n    <div ref={ref}>\\n      <div>1</div>\\n      <div>2</div>\\n      <div>3</div>\\n      <div>4</div>\\n      <div>5</div>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useSwiper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          ref\n        } = useSwiper({\n          pagination: <span>X</span>\n        });\n        return <div ref={ref}>\n        <div>1</div>\n        <div>2</div>\n        <div>3</div>\n        <div>4</div>\n        <div>5</div>\n      </div>;\n      }}\n    </Playground>\n    <h1 {...{\n      \"id\": \"custom-pagination-with-index\"\n    }}>{`Custom Pagination with index`}</h1>\n    <Playground __position={2} __code={'() => {\\n  const { ref } = useSwiper({\\n    pagination: index => <span>{index + 1}</span>,\\n  })\\n  return (\\n    <div ref={ref}>\\n      <div>1</div>\\n      <div>2</div>\\n      <div>3</div>\\n      <div>4</div>\\n      <div>5</div>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useSwiper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          ref\n        } = useSwiper({\n          pagination: index => <span>{index + 1}</span>\n        });\n        return <div ref={ref}>\n        <div>1</div>\n        <div>2</div>\n        <div>3</div>\n        <div>4</div>\n        <div>5</div>\n      </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}